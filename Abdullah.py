# meta developer: @bchmodules
# meta pic: https://0x0.st/HwtW.jpg
# meta banner: https://0x0.st/Hwtv.jpg

from .. import loader, utils

from telethon.tl.types import Message
import aiohttp

@loader.tds
class AbdullahMod(loader.Module):
    """–†–∞–± –ê–ª–ª–∞—Ö–∞."""

    strings = {
        "name": "Abdullah"
    }
    quran_url = "http://api.alquran.cloud/v1/ayah/{sura}:{ayat}/ru.kuliev"
    hadith_url = "https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/editions/{lang}-{edition}/{number}.json"
    
    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "only_me",
                True,
                "–î–ª—è –∫–æ–≥–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –º–æ–¥—É–ª—å? –ï—Å–ª–∏ True - —Ç–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç—É, False - –≤—Å–µ–º, –∫—Ç–æ –ø–∏—à–µ—Ç –∫–æ–º–∞–Ω–¥—ã .ayat <—Å—É—Ä–∞:–∞—è—Ç>",
                validator = loader.validators.Boolean()
            ),
            loader.ConfigValue(
                "hadis_lang",
                "rus",
                "–Ø–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö–∞–¥–∏—Å—ã",
                validator = loader.validators.Choice(["rus", "ara", "eng"])
            )
        )
    
    @loader.watcher("only_messages", regex=r"\.ayat \d+:\d+$")
    async def quran_watcher(self, message: Message):
        sura, ayat = message.text.split()[1].split(":")
        if message.from_id != self.tg_id:
            await message.reply((await self.get_ayat(int(sura), int(ayat))))
        else:
            await utils.answer(message, (await self.get_ayat(int(sura), int(ayat))))
    
    @loader.watcher("only_messages", regex=r"\.muslim \d+$")
    async def muslim_watcher(self, message: Message):
        number = int(message.text.split()[1])
        if message.from_id != self.tg_id:
            await message.reply((await self.get_hadith(self.config["hadis_lang"], "muslim", number)))
        else:
            await utils.answer(message, (await self.get_hadith(self.config["hadis_lang"], "muslim", number)))
    
    @loader.watcher("only_messages", regex=r"\.abudawud \d+$")
    async def abudawud_watcher(self, message: Message):
        number = int(message.text.split()[1])
        if message.from_id != self.tg_id:
            await message.reply((await self.get_hadith(self.config["hadis_lang"], "abudawud", number)))
        else:
            await utils.answer(message, (await self.get_hadith(self.config["hadis_lang"], "abudawud", number)))
    
    @loader.watcher("only_messages", regex=r"\.bukhari \d+$")
    async def bukhari_watcher(self, message: Message):
        number = int(message.text.split()[1])
        if message.from_id != self.tg_id:
            await message.reply((await self.get_hadith(self.config["hadis_lang"], "bukhari", number)))
        else:
            await utils.answer(message, (await self.get_hadith(self.config["hadis_lang"], "bukhari", number)))
    
    async def get_ayat(self, sura: int, ayat: int):
        async with aiohttp.ClientSession() as session:
            async with session.get(self.quran_url.format(sura=sura, ayat=ayat)) as response:
                data = await response.json()
                if data['status'] != "OK":
                    return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫..."
                return (
                    f"<emoji document_id=5373098009640836781>üìö</emoji> –ü–µ—Ä–µ–≤–æ–¥: {data['data']['edition']['name']}\n" \
                    f"<emoji document_id=5240004029769064410>‚ùóÔ∏è</emoji> –°—É—Ä–∞ {data['data']['surah']['name']}, –≤—Å–µ–≥–æ –∞—è—Ç–æ–≤ –≤ —Å—É—Ä–µ: {data['data']['surah']['numberOfAyahs']}\n" \
                    f"<emoji document_id=5240426478457332312>#Ô∏è‚É£</emoji> –°—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ{data['data']['page']}\n\n" \
                    f"{data['data']['text']}"
                )

    async def get_hadith(self, lang: str, edition: str, number: int):
        async with aiohttp.ClientSession() as session:
            async with session.get(self.hadith_url.format(lang=lang, edition=edition, number=number)) as response:
                if response.status != 200:
                    return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫..."
                data = await response.json()
                hadith_text =  (
                    f"<emoji document_id=5373098009640836781>üìö</emoji> –ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: {data['metadata']['name']}, –≥–ª–∞–≤–∞ {data['metadata']['section'][list(data['metadata']['section'])[0]]} –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {list(data['metadata']['section'])[0]}\n"
                    f"<emoji document_id=5240426478457332312>#Ô∏è‚É£</emoji> –†—É—Å—Å–∫–∏–π –Ω–æ–º–µ—Ä —Ö–∞–¥–∏—Å–∞: {data['hadiths'][0]['hadithnumber']}, –∞—Ä–∞–±—Å–∫–∏–π –Ω–æ–º–µ—Ä —Ö–∞–¥–∏—Å–∞: {data['hadiths'][0]['arabicnumber']}\n\n" \
                    f"<emoji document_id=5249277199168579635>üìå</emoji> <b>{data['hadiths'][0]['text']}</b>"
                )
                if grades := data['hadiths'][0]['grades']:
                    hadith_text += "\n\n<emoji document_id=5248949999970036769>üì£</emoji> –£—á—ë–Ω—ã–µ –æ–± —ç—Ç–æ–º —Ö–∞–¥–∏—Å–µ:\n"
                    hadith_text += ",\n".join([f"<i><emoji document_id=5370724846936267183>ü§î</emoji> {grade['name']} –ø–æ—Å—Ç–∞–≤–∏–ª –æ—Ü–µ–Ω–∫—É {grade['grade']}</i>" for grade in grades])
                    # for grade in grades:
                    #     hadith_text += ",\n".join(f"<i><emoji document_id=5370724846936267183>ü§î</emoji> {grade['name']} –ø–æ—Å—Ç–∞–≤–∏–ª –æ—Ü–µ–Ω–∫—É {grade['grade']}</i>")
                return hadith_text
    
    
    async def ayatcmd(self, message):
        """<—Å—É—Ä–∞:–∞—è—Ç> - –∞—è—Ç –∏–∑ –∫–æ—Ä–∞–Ω–∞"""
    
    async def bukharicmd(self, message):
        """<–Ω–æ–º–µ—Ä —Ö–∞–¥–∏—Å–∞> - —Ö–∞–¥–∏—Å –ë—É—Ö–∞—Ä–∏"""
    
    async def muslimcmd(self, message):
        """<–Ω–æ–º–µ—Ä —Ö–∞–¥–∏—Å–∞> - —Ö–∞–¥–∏—Å –ú—É—Å–ª–∏–º–∞"""
    
    async def abudawudcmd(self, message):
        """<–Ω–æ–º–µ—Ä —Ö–∞–¥–∏—Å–∞> - —Ö–∞–¥–∏—Å –ê–±—É –î–∞—É–¥–∞"""